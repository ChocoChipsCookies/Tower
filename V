--[Main Library Source]--

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
 
--[Window or Make tab or section]--

local Window = Library:NewWindow("Tower Script")
 
--[Main]--

local Section = Window:NewSection("Script")

Section:CreateButton("ButtonName", function()

end)

--[Players]--

local Section = Window:NewSection("Main")

Section:CreateButton("ButtonName", function()
print("Clicked")
end)
 
--[TextBox You can make keysystem]--

Section:CreateTextbox("TextBox", function(text)
        print(text)
end)
 
--[You Can Make Toggles]--

Section:CreateToggle("ToggleName", function(value)
function(value)
local CoreGui = game:GetService("StarterGui")

local onMobile = not game:GetService("UserInputService").KeyboardEnabled
local keysDown = {}
local rotating = false
local ActiveFreecam = false

if not game:IsLoaded() then
 game.Loaded:Wait() 
end

local speed = 5
local sens = 0.3

speed /= 10
if onMobile then 
   sens*=2
end

local function renderStepped()
 if ActiveFreecam == true then
    if rotating then
        local delta = game:GetService("UserInputService"):GetMouseDelta()
        local cf = workspace.CurrentCamera.CFrame
        local yAngle = cf:ToEulerAngles(Enum.RotationOrder.YZX)
        local newAmount = math.deg(yAngle)+delta.Y
        if newAmount > 65 or newAmount < -65 then
            if not (yAngle<0 and delta.Y<0) and not (yAngle>0 and delta.Y>0) then
                delta = Vector2.new(delta.X,0)
            end 
        end
        cf *= CFrame.Angles(-math.rad(delta.Y),0,0)
        cf = CFrame.Angles(0,-math.rad(delta.X),0) * (cf - cf.Position) + cf.Position
        cf = CFrame.lookAt(cf.Position, cf.Position + cf.LookVector)
        if delta ~= Vector2.new(0,0) then workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(cf,sens) end
        game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
    else
        game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
    end

    if keysDown["Enum.KeyCode.W"] then
        workspace.CurrentCamera.CFrame *= CFrame.new(Vector3.new(0,0,-speed))
    end
    if keysDown["Enum.KeyCode.A"] then
        workspace.CurrentCamera.CFrame *= CFrame.new(Vector3.new(-speed,0,0))
    end
    if keysDown["Enum.KeyCode.S"] then
        workspace.CurrentCamera.CFrame *= CFrame.new(Vector3.new(0,0,speed))
    end
    if keysDown["Enum.KeyCode.D"] then
        workspace.CurrentCamera.CFrame *= CFrame.new(Vector3.new(speed,0,0))
    end
    workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
    local controls = require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule):GetControls()
    controls:Disable()
 end
end
game:GetService("RunService").RenderStepped:Connect(renderStepped)

local validKeys = {"Enum.KeyCode.W","Enum.KeyCode.A","Enum.KeyCode.S","Enum.KeyCode.D"}

game:GetService("UserInputService").InputBegan:Connect(function(Input)
if ActiveFreecam == true then
    for i, key in pairs(validKeys) do
        if key == tostring(Input.KeyCode) then
            keysDown[key] = true
        end
    end
    if Input.UserInputType == Enum.UserInputType.MouseButton2 or (Input.UserInputType == Enum.UserInputType.Touch and game:GetService("UserInputService"):GetMouseLocation().X>(workspace.CurrentCamera.ViewportSize.X/2)) then
        rotating = true
    end
    if Input.UserInputType == Enum.UserInputType.Touch then
        if Input.Position.X < workspace.CurrentCamera.ViewportSize.X/2 then
            touchPos = Input.Position
        end
    end
end
end)

game:GetService("UserInputService").InputEnded:Connect(function(Input)
if ActiveFreecam == true then
    for key, v in pairs(keysDown) do
        if key == tostring(Input.KeyCode) then
            keysDown[key] = false
        end
    end
    if Input.UserInputType == Enum.UserInputType.MouseButton2 or (Input.UserInputType == Enum.UserInputType.Touch and game:GetService("UserInputService"):GetMouseLocation().X>(workspace.CurrentCamera.ViewportSize.X/2)) then
        rotating = false
    end
    if Input.UserInputType == Enum.UserInputType.Touch and touchPos then
        if Input.Position.X < workspace.CurrentCamera.ViewportSize.X/2 then
            touchPos = nil
            keysDown["Enum.KeyCode.W"] = false
            keysDown["Enum.KeyCode.A"] = false
            keysDown["Enum.KeyCode.S"] = false
            keysDown["Enum.KeyCode.D"] = false
        end
    end
end
end)

game:GetService("UserInputService").TouchMoved:Connect(function(input)
if ActiveFreecam == true then
    if touchPos then
        if input.Position.X < workspace.CurrentCamera.ViewportSize.X/2 then
            if input.Position.Y < touchPos.Y then
                keysDown["Enum.KeyCode.W"] = true
                keysDown["Enum.KeyCode.S"] = false
            else
                keysDown["Enum.KeyCode.W"] = false
                keysDown["Enum.KeyCode.S"] = true
            end
            if input.Position.X < (touchPos.X-15) then
                keysDown["Enum.KeyCode.A"] = true
                keysDown["Enum.KeyCode.D"] = false
            elseif input.Position.X > (touchPos.X+15) then
                keysDown["Enum.KeyCode.A"] = false
                keysDown["Enum.KeyCode.D"] = true
            else
                keysDown["Enum.KeyCode.A"] = false
                keysDown["Enum.KeyCode.D"] = false
            end
        end
    end
end
end)
end)

--[DropDown is Same As TextBox But Different]--

Section:CreateDropdown("DropDown", {"Hello", "World", "Hello World"}, 2, function(text)
print(text)
end)
 
--[Slider You Can Make Speed Silder or jump Slider]--

Section:CreateSlider("Slider", 0, 100, 15, false, function(value)
print(value)
 end)

--[Color Picker You Can make esp]--

Section:CreateColorPicker("Picker", Color3.new(255, 255, 255), function(value)
print(value)
end)

--[creator]--
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")

local userId = Players:GetUserIdFromNameAsync("ihalknsohan99992")
local thumbType = Enum.ThumbnailType.HeadShot
local thumbSize = Enum.ThumbnailSize.Size420x420
local content, isReady = Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)

if isReady then
    StarterGui:SetCore("SendNotification", {
        Title = "Made By BUBU",
        Text = "Thanks For Using My Script.",
        Icon = content,
        Duration = 10
    })
end
